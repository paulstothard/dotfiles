call pathogen#infect()
call pathogen#helptags()

" awesome colorscheme
colorscheme badwolf

" enable syntax processing
syntax enable

" enable spell check
set spell spelllang=en_us

" adjust colors for words detected by spell check
hi SpellBad ctermfg=red ctermbg=black
hi SpellCap ctermfg=red ctermbg=black
hi SpellRare ctermfg=red ctermbg=black
hi SpellLocal ctermfg=black ctermbg=white

" add a colored column at 80
set colorcolumn=80

" hide buffers instead of closing
set hidden

" view tab and newline characters
set list

" wrap lines visually
set wrap

" wrap at word boundaries
set linebreak

" number of spaces in tab when editing
set softtabstop=4

" tabs are spaces
set expandtab

" indent based on current line when starting a new line
set autoindent

" smart autoindenting when starting a new line
set smartindent

" indentation when using < and >
set shiftwidth=4

" show line numbers
set number

" show command in bottom bar
set showcmd

" highlight current line
set cursorline

" load filetype-specific indent files
filetype plugin indent on

" visual autocomplete for command menu
set wildmenu

" redraw only when we need to
set lazyredraw

" highlight matching [{()}]
set showmatch

" search as characters are entered
set incsearch

" highlight matches
set hlsearch

" move vertically by visual line
nnoremap j gj
nnoremap k gk

" leader is comma
let mapleader=","

" jk is escape
inoremap jk <esc>

" source vimrc using ,s
map <leader>s :source ~/.vim/vimrc<CR>

" delete trailing white space using ,w
nnoremap <leader>w :let _s=@/ <Bar> :%s/\s\+$//e <Bar> :let @/=_s <Bar> :nohl <Bar> :unlet _s<CR>

" turn off search highlight
nnoremap <leader><space> :nohlsearch<CR>

" show lightline status bar
set laststatus=2

" start NERDTree
autocmd vimenter * NERDTree
autocmd VimEnter * wincmd p

" window navigation
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

" improve colors in tmux
set background=dark

" quit vim if NERDTree is last and only buffer
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTree") && b:NERDTree.isTabTree()) | q | endif
